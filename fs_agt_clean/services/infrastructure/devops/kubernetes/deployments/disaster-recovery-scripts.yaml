apiVersion: v1
kind: ConfigMap
metadata:
  name: flipsync-disaster-recovery-scripts
  namespace: flipsync-prod
data:
  restore-db.sh: |
    #!/bin/bash
    # Script to restore database from backup

    if [ -z "$1" ]; then
      echo "Usage: restore-db.sh <backup-file-name>"
      echo "Example: restore-db.sh flipsync-backup-20250327-020000.dump"
      exit 1
    fi

    BACKUP_FILE=$1
    BACKUP_BUCKET="flipsync-backups"

    # Download backup file from S3
    aws s3 cp s3://$BACKUP_BUCKET/$BACKUP_FILE /tmp/$BACKUP_FILE

    # Restore database
    pg_restore -d $DATABASE_URL --clean --if-exists /tmp/$BACKUP_FILE

    # Cleanup
    rm /tmp/$BACKUP_FILE

    echo "Database restored successfully from $BACKUP_FILE"

  failover.sh: |
    #!/bin/bash
    # Script to perform failover to standby region

    # Update DNS to point to standby region
    aws route53 change-resource-record-sets \
      --hosted-zone-id $HOSTED_ZONE_ID \
      --change-batch '{
        "Changes": [
          {
            "Action": "UPSERT",
            "ResourceRecordSet": {
              "Name": "api.flipsync.io",
              "Type": "CNAME",
              "TTL": 60,
              "ResourceRecords": [
                {
                  "Value": "flipsync-api-standby.flipsync.io"
                }
              ]
            }
          }
        ]
      }'

    # Scale up standby region resources
    kubectl --context=standby-cluster scale deployment flipsync-api --replicas=3
    kubectl --context=standby-cluster scale deployment flipsync-agent-system --replicas=3

    echo "Failover to standby region completed"

  failback.sh: |
    #!/bin/bash
    # Script to perform failback to primary region

    # Update DNS to point back to primary region
    aws route53 change-resource-record-sets \
      --hosted-zone-id $HOSTED_ZONE_ID \
      --change-batch '{
        "Changes": [
          {
            "Action": "UPSERT",
            "ResourceRecordSet": {
              "Name": "api.flipsync.io",
              "Type": "CNAME",
              "TTL": 60,
              "ResourceRecords": [
                {
                  "Value": "flipsync-api-primary.flipsync.io"
                }
              ]
            }
          }
        ]
      }'

    # Scale down standby region resources
    kubectl --context=standby-cluster scale deployment flipsync-api --replicas=1
    kubectl --context=standby-cluster scale deployment flipsync-agent-system --replicas=1

    echo "Failback to primary region completed"
