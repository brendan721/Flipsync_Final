# FlipSync Clean Production Docker Compose
# NO SSL CONFLICTS - Clean deployment for www.flipsyncai.com

version: "3.8"

services:
  # FlipSync API Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: flipsync-api
    ports:
      - "8000:8000"  # Internal API port
    environment:
      # Core Configuration
      - ENVIRONMENT=production
      - FLIPSYNC_ENV=production
      - DEBUG=false
      - LOG_LEVEL=info

      # Database Configuration
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-FlipSync_DB_Prod_2024}@db:5432/${DB_NAME:-flipsync}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-flipsync}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-FlipSync_DB_Prod_2024}

      # Redis Configuration
      - REDIS_URL=redis://:${REDIS_PASSWORD:-FlipSync_Redis_Prod_2024}@redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=${REDIS_PASSWORD:-FlipSync_Redis_Prod_2024}

      # Security Configuration
      - JWT_SECRET=${JWT_SECRET:-FlipSync_JWT_Production_Secret_2024_Secure_Key}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=15
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - API_SECRET_KEY=${API_SECRET_KEY:-FlipSync_API_Production_Secret_2024}

      # CORS Configuration - FIXED for production domain
      - CORS_ORIGINS=https://www.flipsyncai.com,https://flipsyncai.com,https://api.flipsyncai.com

      # AI Services Configuration - OpenAI Production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_PROJECT_ID=${OPENAI_PROJECT_ID:-proj_Zi0HXTY54mdW7jZuih49FdKW}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS:-4000}
      - OPENAI_TEMPERATURE=${OPENAI_TEMPERATURE:-0.7}
      - USE_OPENAI_PRIMARY=true
      - LLM_PROVIDER=openai
      - DEFAULT_MODEL=${OPENAI_MODEL:-gpt-4o-mini}

      # Cost Control Configuration
      - OPENAI_DAILY_BUDGET=${OPENAI_DAILY_BUDGET:-2.00}
      - OPENAI_MAX_REQUEST_COST=${OPENAI_MAX_REQUEST_COST:-0.05}

      # eBay Production Configuration - FIXED redirect URI
      - EBAY_CLIENT_ID=${EBAY_APP_ID:-BrendanB-Nashvill-PRD-7f5c11990-62c1c838}
      - EBAY_CLIENT_SECRET=${EBAY_CERT_ID:-PRD-f5c119904e18-fb68-4e53-9b35-49ef}
      - EBAY_RUNAME=Brendan_Blomfie-BrendanB-Nashvi-vuwrefym
      - EBAY_REDIRECT_URI=https://www.flipsyncai.com/ebay-oauth
      - EBAY_ENVIRONMENT=production
      - EBAY_APP_ID=${EBAY_APP_ID:-BrendanB-Nashvill-PRD-7f5c11990-62c1c838}
      - EBAY_CERT_ID=${EBAY_CERT_ID:-PRD-f5c119904e18-fb68-4e53-9b35-49ef}
      - EBAY_DEV_ID=${EBAY_DEV_ID:-e83908d0-476b-4534-a947-3a88227709e4}

      # Shippo Configuration
      - SHIPPO_TOKEN=${SHIPPO_TEST_TOKEN}
      - SHIPPO_API_URL=https://api.goshippo.com
      - SHIPPO_RATE_LIMIT_PER_MINUTE=60

      # Agent Configuration
      - ENABLE_AI_AGENTS=true
      - AGENT_COORDINATION_ENABLED=true
      - AGENT_POOL_SIZE=35
      - WORKFLOW_CONCURRENCY=7

      # API Configuration
      - API_HOST=0.0.0.0
      - API_PORT=8000

      # Performance Configuration
      - ENABLE_PERFORMANCE_MONITORING=true
      - ENABLE_AGENT_METRICS=true
      - ENABLE_WORKFLOW_METRICS=true
      - ENABLE_API_METRICS=true

      # Python Configuration
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1

      # NO SSL ENVIRONMENT VARIABLES - Nginx handles SSL

    volumes:
      - ./logs:/app/logs:rw
      - ./uploads:/app/uploads:rw
      # Docker volume caching for dependencies to save space and speed up builds
      - pip_cache:/root/.cache/pip
      - python_packages:/opt/venv

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

    restart: unless-stopped
    networks:
      - flipsync-production

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Flutter Web Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.flutter
    container_name: flipsync-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - API_BASE_URL=https://api.flipsyncai.com
    volumes:
      # Docker volume caching for Node.js dependencies
      - node_modules_cache:/app/node_modules
      - flutter_cache:/root/.flutter
      - dart_cache:/root/.pub-cache
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - flipsync-production

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: flipsync-db
    environment:
      - POSTGRES_DB=${DB_NAME:-flipsync}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-FlipSync_DB_Prod_2024}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - flipsync-production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-flipsync}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: flipsync-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-FlipSync_Redis_Prod_2024} --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - flipsync-production
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-FlipSync_Redis_Prod_2024}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: flipsync-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - flipsync-production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  # Docker volume caching for dependencies - saves space and speeds up builds
  pip_cache:
    driver: local
  python_packages:
    driver: local
  node_modules_cache:
    driver: local
  flutter_cache:
    driver: local
  dart_cache:
    driver: local

networks:
  flipsync-production:
    driver: bridge
    name: flipsync-production
